-------------------------------------------------Exercise-15 - Store Array List 
-------------Product.java
package com.htc.javaweek3;

public class Product {
	private String productId;
	private String productName;
	private double productPrice;
	//Constructor
	public Product(String productId, String productName, double productPrice) {
		super();
		this.productId = productId;
		this.productName = productName;
		this.productPrice = productPrice;
	}
	//getters & setters 
	public String getProductId() {
		return productId;
	}
	public void setProductId(String productId) {
		this.productId = productId;
	}
	public String getProductName() {
		return productName;
	}
	public void setProductName(String productName) {
		this.productName = productName;
	}
	public double getProductPrice() {
		return productPrice;
	}
	public void setProductPrice(double productPrice) {
		this.productPrice = productPrice;
	}
	@Override
	public String toString() {
		return "Product [productId=" + productId + ", productName=" + productName + ", productPrice=" + productPrice
				+ "]";
	}
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((productId == null) ? 0 : productId.hashCode());
		return result;
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Product other = (Product) obj;
		if (productId == null) {
			if (other.productId != null)
				return false;
		} else if (!productId.equals(other.productId))
			return false;
		return true;
	}
	

}
---------------------------------------------------------------------------------------
package com.htc.javaweek3;

import java.util.Comparator;

public class NameCompare implements Comparator<Product>{
	
public int compare(Product p1, Product p2) {
	return (p1.getProductName().compareToIgnoreCase(p2.getProductName()));
	}
}
---------------------------------------------------------------------------------------
package com.htc.javaweek3;

import java.util.ArrayList;
import java.util.Collections;

public class Store {
private ArrayList<Product> productAList;
//Constructor
public Store(ArrayList<Product> productAList) {
	super();
	this.productAList = productAList;
}
//Default Constructor
public Store() {
	super();
}

//getters & setters
public ArrayList<Product> getProductAList() {
	return productAList;
}
public void setProductAList(ArrayList<Product> productAList) {
	this.productAList = productAList;
}
@Override
public String toString() {
	return "Store [productAList=" + productAList + "]";
}
@Override
public int hashCode() {
	final int prime = 31;
	int result = 1;
	result = prime * result + ((productAList == null) ? 0 : productAList.hashCode());
	return result;
}
@Override
public boolean equals(Object obj) {
	if (this == obj)
		return true;
	if (obj == null)
		return false;
	if (getClass() != obj.getClass())
		return false;
	Store other = (Store) obj;
	if (productAList == null) {
		if (other.productAList != null)
			return false;
	} else if (!productAList.equals(other.productAList))
		return false;
	return true;
}

public void compare(ArrayList<Product> productAList,NameCompare nc ) {
	Collections.sort(productAList,nc);
	System.out.println("After Sort by ProductName..");
	for(Product st:productAList) {
		System.out.println(st.getProductId()+" "+st.getProductName()+" "+st.getProductPrice());
	}
}

}

-------------------------------------------------------------------------------------------------------

Main Program
package com.htc.javaweek3;

import java.util.ArrayList;

public class StoreMain {

	public static void main(String[] args) {
		ArrayList<Product> productAList = new ArrayList<Product>();
		productAList.add(new Product("Item#1","Milk",10));
		productAList.add(new Product("Item#2","Almond",10));
		productAList.add(new Product("Item#3","Biscuit",10));
		System.out.println("Before Sort by ProductName..");
		System.out.println(productAList);
		Store s = new Store();
		NameCompare nc = new NameCompare();
		s.compare(productAList, nc);		
	}

}
-----------------------------------Output
Before Sort by ProductName..
[Product [productId=Item#1, productName=Milk, productPrice=10.0], Product [productId=Item#2, productName=Almond, productPrice=10.0], Product [productId=Item#3, productName=Biscuit, productPrice=10.0]]
After Sort by ProductName..
Item#2 Almond 10.0
Item#3 Biscuit 10.0
Item#1 Milk 10.0
